openapi: 3.0.0
info:
  title: Europace Authorization API
  description: Mit diesem Service lassen sich Access Tokens von registrierten Clients anfordern um die Europace APIs zu verwenden.
  version: '0.1'
  termsOfService: TODO
  contact:
    name: Europace Support
    url: 'https://developer.europace.de/'
    email: devsupport@europace2.de
servers:
  - url: 'https://api.europace.de/auth'
    description: Produktiv Server
paths:
  /access-token:
    post:
      summary: Endpunkt um Access Token anzufordern
      description: Client-Id und Client-Secret müssen per HTTP Basic Auth übergeben werden.
      parameters:
        - schema:
            type: string
            default: mytraceid123
          in: header
          name: X-TraceId
          description: 'Frei-wählbarer String, um Debugging zu vereinfachen'
      security:
        - basicAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  default: client_credentials
                  description: Muss für den Client-Credentials-Flow `client_credentials` sein.
                scope:
                  type: string
                  default: no-access impersonieren
                  description: '" "-separierte Liste von Scopes'
                subject:
                  type: string
                  description: Partner-Id des Partners in dessen Namen der Client agiert. Das Subject muss dem Akteur untergeordnet sein.
                actor:
                  type: string
                  description: 'Partner-Id des Partners in dessen Auftrag der Client agiert, es muss ein Client-Approval des Akteurs für den Client vorliegen.'
              required:
                - grant_type
                - scope
      tags:
        - authz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: string
                  scope:
                    type: string
                required:
                  - access_token
              examples:
                Beispiel Response:
                  value:
                    access_token: I6MTU3...wet46
                    token_type: BEARER
                    expires_in: 3599
                    scope: no-access
        '400':
          description: Bad Request. zB nicht existierende Scopes angefordert
        '401':
          description: 'Unauthorized. Autorisierungsfehler bei den Client Credentials '
        '429':
          description: Too Many Requests. Rate-Limit überschritten.
        '500':
          description: Internal Server Error. Autsch.
        '503':
          description: Service Unavailable
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
